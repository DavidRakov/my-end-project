version: "3.9"
services:
  pg:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - pg:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 25s
      retries: 3
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./reids:/data

  server:
    container_name: server
    build: ./server
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_started
      mongodb:
        condition: service_healthy
    ports:
      - 4500:4500
    environment:
      # NODE_ENV: production
      PGHOST: pg
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres
      PGNAME: postgres
      PGDATABASE: shopping_list
      REDIS_HOST: redis
      REDIS_PORT: 6379
      EXPRESSPORT: 4500
      MONGODB_URI: mongodb://localhost:27017/beer_hatora
    links:
      - pg
      - redis
      - mongodb
      - client
    develop:
      watch:
        - action: rebuild
          path: ./server/app/package.json
    volumes:
      - ./server/app/src:/app/src
    stdin_open: true
    tty: true

  client:
    container_name: client
    build: ./client
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: rebuild
          path: ./client/vite-project/package.json
    volumes:
      - ./client/vite-project/src:/app/src

  mongodb:
    container_name: mongodb
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    command: --wiredTigerCacheSizeGB 1.5
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 25s
      retries: 3

volumes:
  redis:
    driver: local
  pg:
    driver: local
  mongo-data:
    driver: local
